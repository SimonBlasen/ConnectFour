package util;

import de.cogsys.ai.sogo.game.SogoGame;
import de.cogsys.ai.sogo.game.SogoGame.Player;

public class GameAnalyzer {

	
	public static final int[][][] lines = new int[][][] {{{0,0,0},{0,0,1},{0,0,2},{0,0,3}},
		{{1,0,0},{1,0,1},{1,0,2},{1,0,3}},
		{{2,0,0},{2,0,1},{2,0,2},{2,0,3}},
		{{3,0,0},{3,0,1},{3,0,2},{3,0,3}},
		{{0,1,0},{0,1,1},{0,1,2},{0,1,3}},
		{{1,1,0},{1,1,1},{1,1,2},{1,1,3}},
		{{2,1,0},{2,1,1},{2,1,2},{2,1,3}},
		{{3,1,0},{3,1,1},{3,1,2},{3,1,3}},
		{{0,2,0},{0,2,1},{0,2,2},{0,2,3}},
		{{1,2,0},{1,2,1},{1,2,2},{1,2,3}},
		{{2,2,0},{2,2,1},{2,2,2},{2,2,3}},
		{{3,2,0},{3,2,1},{3,2,2},{3,2,3}},
		{{0,3,0},{0,3,1},{0,3,2},{0,3,3}},
		{{1,3,0},{1,3,1},{1,3,2},{1,3,3}},
		{{2,3,0},{2,3,1},{2,3,2},{2,3,3}},
		{{3,3,0},{3,3,1},{3,3,2},{3,3,3}},
		
		{{0,0,0},{0,1,0},{0,2,0},{0,3,0}},
		{{1,0,0},{1,1,0},{1,2,0},{1,3,0}},
		{{2,0,0},{2,1,0},{2,2,0},{2,3,0}},
		{{3,0,0},{3,1,0},{3,2,0},{3,3,0}},
		{{0,0,1},{0,1,1},{0,2,1},{0,3,1}},
		{{1,0,1},{1,1,1},{1,2,1},{1,3,1}},
		{{2,0,1},{2,1,1},{2,2,1},{2,3,1}},
		{{3,0,1},{3,1,1},{3,2,1},{3,3,1}},
		{{0,0,2},{0,1,2},{0,2,2},{0,3,2}},
		{{1,0,2},{1,1,2},{1,2,2},{1,3,2}},
		{{2,0,2},{2,1,2},{2,2,2},{2,3,2}},
		{{3,0,2},{3,1,2},{3,2,2},{3,3,2}},
		{{0,0,3},{0,1,3},{0,2,3},{0,3,3}},
		{{1,0,3},{1,1,3},{1,2,3},{1,3,3}},
		{{2,0,3},{2,1,3},{2,2,3},{2,3,3}},
		{{3,0,3},{3,1,3},{3,2,3},{3,3,3}},
		
		{{0,0,0},{1,0,0},{2,0,0},{3,0,0}},
		{{0,1,0},{1,1,0},{2,1,0},{3,1,0}},
		{{0,2,0},{1,2,0},{2,2,0},{3,2,0}},
		{{0,3,0},{1,3,0},{2,3,0},{3,3,0}},
		{{0,0,1},{1,0,1},{2,0,1},{3,0,1}},
		{{0,1,1},{1,1,1},{2,1,1},{3,1,1}},
		{{0,2,1},{1,2,1},{2,2,1},{3,2,1}},
		{{0,3,1},{1,3,1},{2,3,1},{3,3,1}},
		{{0,0,2},{1,0,2},{2,0,2},{3,0,2}},
		{{0,1,2},{1,1,2},{2,1,2},{3,1,2}},
		{{0,2,2},{1,2,2},{2,2,2},{3,2,2}},
		{{0,3,2},{1,3,2},{2,3,2},{3,3,2}},
		{{0,0,3},{1,0,3},{2,0,3},{3,0,3}},
		{{0,1,3},{1,1,3},{2,1,3},{3,1,3}},
		{{0,2,3},{1,2,3},{2,2,3},{3,2,3}},
		{{0,3,3},{1,3,3},{2,3,3},{3,3,3}},
		
	
	

		{{0,0,0},{0,1,1},{0,2,2},{0,3,3}},
		{{1,0,0},{1,1,1},{1,2,2},{1,3,3}},
		{{2,0,0},{2,1,1},{2,2,2},{2,3,3}},
		{{3,0,0},{3,1,1},{3,2,2},{3,3,3}},
		{{0,0,3},{0,1,2},{0,2,1},{0,3,0}},
		{{1,0,3},{1,1,2},{1,2,1},{1,3,0}},
		{{2,0,3},{2,1,2},{2,2,1},{2,3,0}},
		{{3,0,3},{3,1,2},{3,2,1},{3,3,0}},

		{{0,0,0},{1,0,1},{2,0,2},{3,0,3}},
		{{0,1,0},{1,1,1},{2,1,2},{3,1,3}},
		{{0,2,0},{1,2,1},{2,2,2},{3,2,3}},
		{{0,3,0},{1,3,1},{2,3,2},{3,3,3}},
		{{0,0,3},{1,0,2},{2,0,1},{3,0,0}},
		{{0,1,3},{1,1,2},{2,1,1},{3,1,0}},
		{{0,2,3},{1,2,2},{2,2,1},{3,2,0}},
		{{0,3,3},{1,3,2},{2,3,1},{3,3,0}},

		{{0,0,0},{1,1,0},{2,2,0},{3,3,0}},
		{{0,0,1},{1,1,1},{2,2,1},{3,3,1}},
		{{0,0,2},{1,1,2},{2,2,2},{3,3,2}},
		{{0,0,3},{1,1,3},{2,2,3},{3,3,3}},
		{{3,0,0},{2,1,0},{1,2,0},{0,3,0}},
		{{3,0,1},{2,1,1},{1,2,1},{0,3,1}},
		{{3,0,2},{2,1,2},{1,2,2},{0,3,2}},
		{{3,0,3},{2,1,3},{1,2,3},{0,3,3}},
		
	

		{{0,0,0},{1,1,1},{2,2,2},{3,3,3}},
		{{0,0,3},{1,1,2},{2,2,1},{3,3,0}},
		{{3,0,0},{2,1,1},{1,2,2},{0,3,3}},
		{{3,0,3},{2,1,2},{1,2,1},{0,3,0}},};
	
	public static int countFreeLine(Player[] line, Player player) {
		int c = 0;
		for (int i = 0; i < 4; i++) {
			if (line[i] == player) {
				c++;
			}
			else if (line[i] != Player.NONE)
			{
				return 0;
			}
		}
		return c;
	}
	
	
	
	public static int getAmountOfLines(SogoGame g, int lineLength, Player player)
	{
		// ATTENTION: Doesnt work yet
		
		int linesAmount = 0;
		
		for (int x = 0; x < 4; x++)
		{
			for (int y = 0; y < 4; y++)
			{
				int plAmount = 0;
				for (int z = 0; z < 4; z++)
				{
					if (g.board[x][y][z] == player)
					{
						plAmount++;
					}
					else if (g.board[x][y][z] == Player.NONE)
					{
						// Do nothing do to space
					}
					else	// In this case, its the other player
					{
						plAmount = -1;
						break;
					}
				}
				
				if (plAmount == lineLength)
				{
					linesAmount++;
				}
			}
		}
		
		return linesAmount;
	}
	
}
